{"version":3,"file":"index.mjs","sources":["../../src/implementation/Dvo.ts","../../src/implementation/Functions.ts"],"sourcesContent":["import { QApp } from '@airport/aviation-communication'\nimport {\n  DbEntity,\n  ApplicationEntity_LocalId as DbEntityId,\n} from '@airport/ground-control';\nimport { IDvo } from '../definition/IDvo';\n\n/**\n * Data Validation object.\n */\nexport class Dvo<Entity,\n  EntityVDescriptor>\n  implements IDvo<Entity, EntityVDescriptor> {\n\n  protected dbEntity: DbEntity;\n\n  constructor(\n    dbEntityId: DbEntityId | DbEntity,\n    qApplication?: QApp,\n  ) {\n    if (typeof dbEntityId === 'number') {\n      this.dbEntity = qApplication.__dbApplication__.currentVersion[0]\n        .applicationVersion.entities[dbEntityId];\n    } else {\n      this.dbEntity = dbEntityId;\n    }\n  }\n\n  async validate(\n    entity: Entity,\n    rules: EntityVDescriptor\n  ): Promise<boolean> {\n    return null\n  }\n\n}\n","import { IEntityVDescriptor } from \"../definition/IEntityVDescriptor\";\nimport { IValidationField } from \"../definition/IValidationField\";\nimport { IVNumberField } from \"../definition/IVNumberField\";\nimport { IVStringField } from \"../definition/IVStringField\";\n\nexport const and = function <T, F extends IValidationField<T>>(\n    ...conditions: F[]\n): F {\n    throw Error('Implement')\n}\n\nexport const between = function (\n    from: number,\n    to: number\n): IVNumberField {\n    throw Error('Implement')\n}\n\nexport const byId = function <T, E extends IEntityVDescriptor<T>>(): E {\n    throw Error('Implement')\n}\n\nexport const equals = function <T, E extends IEntityVDescriptor<T>>(\n    valueOrTyped?: E,\n    valueIfTyped?: E\n): E {\n    throw Error('Implement')\n}\n\nexport const exists = function <T, E extends IEntityVDescriptor<T>>(\n    valueOrTyped?: E,\n    valueIfTyped?: E\n): E {\n    throw Error('Implement')\n}\n\nexport const isInteger = function (\n    field: IVNumberField\n): IVNumberField {\n    throw Error('Implement')\n}\n\nexport const isNotNull = function <T, E extends IEntityVDescriptor<T>>(\n    validationSpec?: boolean\n): E {\n    throw Error('Implement')\n}\n\nexport const isNull = function <T, E extends IEntityVDescriptor<T>>(\n    validationSpec?: boolean\n): E {\n    throw Error('Implement')\n}\n\nexport const length = function (\n    from: number,\n    to: number\n): IVNumberField {\n    throw Error('Implement')\n}\n\nexport const oneOfNumbers = function <T>(\n    ...values: number[]\n): IVNumberField {\n    throw Error('Implement')\n}\n\nexport const oneOfStrings = function <T>(\n    ...values: string[]\n): IVStringField {\n    throw Error('Implement')\n}\n\nexport const or = function <T, F extends IValidationField<T>>(\n    ...conditions: F[]\n): F {\n    throw Error('Implement')\n}\n\nexport const typed = function <T, E extends IEntityVDescriptor<T>>(\n    options?: {}\n): E {\n    throw Error('Implement')\n}\n\nexport const uniqueIn = function <T, F extends IValidationField<T>>(\n    value: T\n): F {\n    throw Error('Implement')\n}\n\nexport const value = function <T, F extends IValidationField<T>>(\n    value: T\n): F {\n    throw Error('Implement')\n}\n"],"names":[],"mappings":"AAOA;;AAEG;MACU,GAAG,CAAA;IAMd,WACE,CAAA,UAAiC,EACjC,YAAmB,EAAA;AAEnB,QAAA,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC,CAAC;AAC7D,iBAAA,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAC5C,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC5B,SAAA;KACF;AAED,IAAA,MAAM,QAAQ,CACZ,MAAc,EACd,KAAwB,EAAA;AAExB,QAAA,OAAO,IAAI,CAAA;KACZ;AAEF;;AC9BY,MAAA,GAAG,GAAG,UACf,GAAG,UAAe,EAAA;AAElB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,OAAO,GAAG,UACnB,IAAY,EACZ,EAAU,EAAA;AAEV,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,IAAI,GAAG,YAAA;AAChB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,MAAM,GAAG,UAClB,YAAgB,EAChB,YAAgB,EAAA;AAEhB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,MAAM,GAAG,UAClB,YAAgB,EAChB,YAAgB,EAAA;AAEhB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,SAAS,GAAG,UACrB,KAAoB,EAAA;AAEpB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,SAAS,GAAG,UACrB,cAAwB,EAAA;AAExB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,MAAM,GAAG,UAClB,cAAwB,EAAA;AAExB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,MAAM,GAAG,UAClB,IAAY,EACZ,EAAU,EAAA;AAEV,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,YAAY,GAAG,UACxB,GAAG,MAAgB,EAAA;AAEnB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,YAAY,GAAG,UACxB,GAAG,MAAgB,EAAA;AAEnB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEY,MAAA,EAAE,GAAG,UACd,GAAG,UAAe,EAAA;AAElB,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,KAAK,GAAG,UACjB,OAAY,EAAA;AAEZ,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,QAAQ,GAAG,UACpB,KAAQ,EAAA;AAER,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B,EAAC;AAEM,MAAM,KAAK,GAAG,UACjB,KAAQ,EAAA;AAER,IAAA,MAAM,KAAK,CAAC,WAAW,CAAC,CAAA;AAC5B;;;;"}